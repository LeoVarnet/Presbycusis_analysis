ylim(0, 100) + guides(alpha = FALSE, size = FALSE)+
scale_alpha(range = c(0, 1))+
ylab('Intellitest scores (% correct)')+
xlab('PTA (dB HL)')+
scale_size_area(max_size = 2,name = "N",n.breaks = 5) +
facet_grid(center~agefactor)+
theme(legend.position = "none")
parsfit<-extract(fit.m1.1hi,pars=rev(fit.m1.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
parsfit<-extract(fit.m1.1hi,pars=rev(fit.m1.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
m1.1hi <- stan_model(file = 'm1.1hi_quater.stan')
fit.m1.1hi <- sampling(m1.1hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_0","gamma_0","beta_PTA","beta_age","beta_cond","beta_gender","plapse","sigma_0")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m1.1hi, pars = parameters)
#launch_shinystan(fit.m1.1hi)
plot(fit.m1.1hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.1hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
parsfit<-extract(fit.m1.1hi,pars=rev(fit.m1.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
p3.1b_fit <- p3.1b_fit + facet_grid(group~agefactor)+theme(strip.text.y = element_text(color ="lightgray"))
plot_grid(p3.1b_fit, p3.1c_fit, labels=c("A", "B"), ncol = 1, nrow = 2, rel_heights = c(1, 2))
ggsave("FigureModelFit.pdf", width = 8, height = 15)
parsfit$plapse
mean(parsfit$plapse)
plot_grid(p3.1b_fit, p3.1c_fit, labels=c("A", "B"), ncol = 1, nrow = 2, rel_heights = c(1, 3))
ggsave("FigureModelFit.pdf", width = 6, height = 10)
p3.1b <- ggplot(data = subset(heardata,group=="HI")) +
geom_count(aes(x=PTA, y=PC_silence), alpha = 1) +#, color=center
geom_count(aes(x=PTA, y=PC_noise), shape=1, alpha = 1) +#, color=center
#geom_segment(aes(x=PTA, xend=PTA, y=lPC_noise, yend=lPC_silence, color=center)) +
#scale_size(name = "N")
ylim(0, 100) + guides(alpha = FALSE, size = FALSE)+
scale_alpha(range = c(0, 1))+
ylab('Intellitest scores (% correct)')+
xlab('PTA (dB HL)')+
scale_size_area(max_size = 1.5,name = "N",n.breaks = 5) +
facet_grid(~agefactor)
p3.1b
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
levels(heardata$agefactor)
levels(heardata$agefactor) <- c(paste("age = ", floor(agefactor_cutoff[1]), "-", floor(agefactor_cutoff[2],"y")),
paste("age = ", floor(agefactor_cutoff[2]), "-", floor(agefactor_cutoff[3],"y")),
paste("age = ", floor(agefactor_cutoff[3]), "-", floor(agefactor_cutoff[4],"y")))#paste("age (y) =", levels(heardata$agefactor))
levels(heardata$agefactor) <- c(paste("age = ", floor(agefactor_cutoff[1]), "-", floor(agefactor_cutoff[2]),"y"),
paste("age = ", floor(agefactor_cutoff[2]), "-", floor(agefactor_cutoff[3]),"y"),
paste("age = ", floor(agefactor_cutoff[3]), "-", floor(agefactor_cutoff[4]),"y"))#paste("age (y) =", levels(heardata$agefactor))
p3.1b <- ggplot(data = subset(heardata,group=="HI")) +
geom_count(aes(x=PTA, y=PC_silence), alpha = 1) +#, color=center
geom_count(aes(x=PTA, y=PC_noise), shape=1, alpha = 1) +#, color=center
#geom_segment(aes(x=PTA, xend=PTA, y=lPC_noise, yend=lPC_silence, color=center)) +
#scale_size(name = "N")
ylim(0, 100) + guides(alpha = FALSE, size = FALSE)+
scale_alpha(range = c(0, 1))+
ylab('Intellitest scores (% correct)')+
xlab('PTA (dB HL)')+
scale_size_area(max_size = 1.5,name = "N",n.breaks = 5) +
facet_grid(~agefactor)
p3.1c <- ggplot(data = subset(heardata,group=="HI")) +
geom_count(aes(x=PTA, y=PC_silence, color=center)) +
geom_count(aes(x=PTA, y=PC_noise, color=center), shape=1) +
#geom_segment(aes(x=PTA, xend=PTA, y=lPC_noise, yend=lPC_silence, color=center)) +
#scale_size(name = "N")+
ylim(0, 100) + guides(alpha = FALSE, size = FALSE)+
scale_alpha(range = c(0, 1))+
ylab('Intellitest scores (% correct)')+
xlab('PTA (dB HL)')+
scale_size_area(max_size = 1.5,name = "N",n.breaks = 5) +
facet_grid(center~agefactor)+
theme(legend.position = "none")
p3.1b
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
#heardata_pred$agefactor <- cut.default(heardata_pred$age, seq(from=min_age-1,to=max_age+1,length.out=4))
heardata_pred$agefactor <- cut.default(heardata_pred$age, agefactor_cutoff)
levels(heardata_pred$agefactor) <- c(paste("age = ", floor(agefactor_cutoff[1]), "-", floor(agefactor_cutoff[2]),"y"),
paste("age = ", floor(agefactor_cutoff[2]), "-", floor(agefactor_cutoff[3]),"y"),
paste("age = ", floor(agefactor_cutoff[3]), "-", floor(agefactor_cutoff[4]),"y"))#paste("age (y) =", levels(heardata$agefactor))
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
p3.1b_fit <- p3.1b_fit + facet_grid(group~agefactor)+theme(strip.text.y = element_text(color ="lightgray"))
plot_grid(p3.1b_fit, p3.1c_fit, labels=c("A", "B"), ncol = 1, nrow = 2, rel_heights = c(1, 3))
ggsave("FigureModelFit.pdf", width = 6, height = 10)
levels(heardata_pred_center$agefactor) <- c(paste("age = ", floor(agefactor_cutoff[1]), "-", floor(agefactor_cutoff[2]),"y"),
paste("age = ", floor(agefactor_cutoff[2]), "-", floor(agefactor_cutoff[3]),"y"),
paste("age = ", floor(agefactor_cutoff[3]), "-", floor(agefactor_cutoff[4]),"y"))#paste("age (y) =", levels(heardata$agefactor))
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
p3.1b_fit <- p3.1b_fit + facet_grid(group~agefactor)+theme(strip.text.y = element_text(color ="lightgray"))
plot_grid(p3.1b_fit, p3.1c_fit, labels=c("A", "B"), ncol = 1, nrow = 2, rel_heights = c(1, 3))
ggsave("FigureModelFit.pdf", width = 6, height = 10)
library(psych)
install.packages("psych")
describe.by(heardata, group)
library(psych)
install.packages("mnormt")
library(psych)
?aggregate
aggregate(heardata, by=group)
aggregate(heardata, by=group, FUN=c("mean","sd"))
aggregate(heardata, by=group, FUN=mean)
aggregate(data = heardata, by=group, FUN=mean)
aggregate(data = heardata, by=heardata$group, FUN=mean)
aggregate(x = heardata, by=heardata$group, FUN=mean)
aggregate( formula = .~group, data = heardata, FUN=mean)
aggregate( formula = .~group, data = heardata, FUN= c(mean,sd)
)
aggregate( formula = .~group, data = heardata, FUN= mean)
aggregate( formula = .~group, data = heardata, FUN= sd)
aggregate( formula = .~group, data = heardata, FUN= mean)
aggregate( formula = .~group, data = heardata, FUN= mean)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group + centers, data = heardata, drop = "TRUE", FUN= mean)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group + center, data = heardata, drop = "TRUE", FUN= mean)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group + center, data = heardata, FUN= mean)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group, data = heardata, FUN= mean)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group, data = heardata, FUN= sd)
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group, data = heardata, FUN = function(x) c(m = mean(x), sd = sd(x) ))
aggregate( formula = cbind(PTA, age, PC_silence, PC_noise) ~ group, data = heardata, FUN = function(x) c(mean = mean(x), sd = sd(x), med= median(x)))
aggregate( formula = cbind(PTA, age) ~ group, data = heardata, FUN = function(x) c(mean = mean(x), sd = sd(x), med= median(x)))
aggregate( formula = cbind(PC_silence, PC_noise) ~ group, data = heardata, FUN = function(x) c(mean = mean(x), sd = sd(x), med= median(x)))
aggregate( formula = cbind(PTA, age) ~ group + center, data = heardata, FUN = function(x) c(mean = mean(x), sd = sd(x), med= median(x)))
aggregate( formula = cbind(PC_silence, PC_noise) ~ group + center, data = heardata, FUN = function(x) c(mean = mean(x), sd = sd(x), med= median(x)))
#launch_shinystan(fit.m1.1hi)
plot(fit.m1.1hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.1hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
mean(parsfit$beta_cond)
quantile(parsfit$beta_cond,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$beta_PTA,probs=c(0.025,0.5,0.975),na.rm = TRUE)
mean(parsfit$beta_PTA)
mean(parsfit$beta_age)
quantile(parsfit$beta_age,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$beta_age,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$beta_PTA/parsfit$beta_age,probs=c(0.025,0.5,0.975),na.rm = TRUE)
mean(parsfit$beta_PTA/parsfit$beta_age)
mean(parsfit$gammaz_0[3,])
mean(parsfit$gammaz_0[3,])
mean(parsfit$gammaz_0[])
parsfit$gammaz_0
mean(parsfit$gammaz_0[,3])
mean(parsfit$gammaz_0[,3]*parsfit$sigma_0)
quantile(parsfit$gammaz_0[,3]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$gammaz_0[,7]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$gammaz_0[,1]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$gammaz_0[,2]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$gammaz_0[,4]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$gammaz_0[,5]*parsfit$sigma_0,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(parsfit$beta_gender,probs=c(0.025,0.5,0.975),na.rm = TRUE)
mean(parsfit$beta_gender)
mean(parsfit$plapse)
quantile(parsfit$plapse,probs=c(0.025,0.5,0.975),na.rm = TRUE)
## 6. Hier. GLM w only main effects (without PTA) -----------------
m1.2hi <- stan_model(file = 'm1.2hi_quater.stan')
fit.m1.2hi <- sampling(m1.2hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_0","gamma_0","beta_age","beta_cond","beta_gender","plapse")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m1.2hi, pars = parameters)
#launch_shinystan(fit.m1.2hi)
#plot(fit.m1.2hi, pars = parameters)+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
plot(fit.m1.2hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.2hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
# counterfactual predictions
parsfit<-extract(fit.m1.2hi,pars=rev(fit.m1.2hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
# Compute goodness of fit measures
Rsquared_m1.2hi <- Rsquared(data,parsfit)
log_lik_1.2hi <- extract_log_lik(fit.m1.2hi)
waic_1.2hi <- waic(log_lik_1.2hi)
loo_1.2hi <- loo(log_lik_1.2hi)
print(loo_1.2hi)
? `plot,stanfit-method`
plot(c(fit.m1.2hi,fit.m1.1hi))
parsfit<-extract(fit.m1.1hi,pars=rev(fit.m1.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
Rsquared_m1.1hi
Rsquared_m1.1hi <- Rsquared(data,parsfit)
log_lik_1.1hi <- extract_log_lik(fit.m1.1hi)
pwll_1.1hi <- apply(log_lik_1.1hi, 2, mean)
waic_1.1hi <- waic(log_lik_1.1hi)
pwwaic_1.1hi <- waic_1.1hi$pointwise[,"elpd_waic"]
loo_1.1hi <- loo(log_lik_1.1hi)
print(loo_1.1hi)
Rsquared_m1.1hi
log_lik_1.1hi
sum(log_lik_1.1hi)
print(loo_1.1hi)
sum(pwll_1.1hi)
log_lik_1.1hi
print(log_lik_1.1hi)
View(log_lik_1.1hi)
print(loo_1.1hi)
mean(pwll_1.1hi)
sum(pwll_1.1hi)
-2*sum(pwll_1.1hi)
parsfit<-extract(fit.m1.2hi,pars=rev(fit.m1.2hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Rsquared_m1.2hi <- Rsquared(data,parsfit)
log_lik_1.2hi <- extract_log_lik(fit.m1.2hi)
pwll_1.2hi <- apply(log_lik_1.2hi, 2, mean)
waic_1.2hi <- waic(log_lik_1.2hi)
loo_1.2hi <- loo(log_lik_1.2hi)
print(loo_1.2hi)
Rsquared_m1.2hi
-2*sum(pwll_1.2hi)
rstan:::rstudio_stanc("m1.2hi_quater.stan")
## 6. Hier. GLM w only main effects (without PTA) -----------------
m1.2hi <- stan_model(file = 'm1.2hi_quater.stan')
fit.m1.2hi <- sampling(m1.2hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_0","gamma_0","beta_age","beta_cond","beta_gender","plapse")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m1.2hi, pars = parameters)
#launch_shinystan(fit.m1.2hi)
#plot(fit.m1.2hi, pars = parameters)+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
plot(fit.m1.2hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.2hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
# counterfactual predictions
parsfit<-extract(fit.m1.2hi,pars=rev(fit.m1.2hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
# Compute goodness of fit measures
Rsquared_m1.2hi <- Rsquared(data,parsfit)
log_lik_1.2hi <- extract_log_lik(fit.m1.2hi)
pwll_1.2hi <- apply(log_lik_1.2hi, 2, mean)
waic_1.2hi <- waic(log_lik_1.2hi)
loo_1.2hi <- loo(log_lik_1.2hi)
print(loo_1.2hi)
Rsquared_m1.2hi
-2*sum(pwll_1.2hi)
## 7. Hier. GLM w only main effects (without age) -----------------
m1.3hi <- stan_model(file = 'm1.3hi_quater.stan')
fit.m1.3hi <- sampling(m1.3hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_PTA","beta_cond","beta_gender")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
parameters = c("beta_0","gamma_0","beta_PTA","beta_cond","beta_gender","plapse")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m1.3hi, pars = parameters)
#launch_shinystan(fit.m1.3hi)
plot(fit.m1.3hi, pars = parameters)+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
plot(fit.m1.3hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.3hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
# counterfactual predictions
parsfit<-extract(fit.m1.3hi,pars=rev(fit.m1.3hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
# Compute goodness of fit measures
Rsquared_m1.3hi <- Rsquared(data,parsfit)
log_lik_1.3hi <- extract_log_lik(fit.m1.3hi)
waic_1.3hi <- waic(log_lik_1.3hi)
loo_1.3hi <- loo(log_lik_1.3hi)
print(loo_1.3hi)
-2*sum(pwll_1.3hi)
pwll_1.3hi <- apply(log_lik_1.3hi, 2, mean)
-2*sum(pwll_1.3hi)
Rsquared_m1.3hi <- Rsquared(data,parsfit)
Rsquared_m1.3hi
## 8. Full hier. GLM on intercept -----------------
m2.1hi <- stan_model(file = 'm2.1hi_quater.stan')
fit.m2.1hi <- sampling(m2.1hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_0","gamma_0","beta_PTA","beta_age","beta_agePTA","beta_cond","beta_condPTA","beta_agecond","beta_agecondPTA","beta_gender","plapse")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m2.1hi, pars = parameters)
#launch_shinystan(fit.m2.1hi)
plot(fit.m2.1hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m2.1hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
# counterfactual predictions
parsfit<-extract(fit.m2.1hi,pars=rev(fit.m2.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_full.R")
p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
# Compute goodness of fit measures
Rsquared_m2.1hi <- Rsquared(data,parsfit)
log_lik_2.1hi <- extract_log_lik(fit.m2.1hi)
pwll_2.1hi <- apply(log_lik_2.1hi, 2, mean)
waic_2.1hi <- waic(log_lik_2.1hi)
pwwaic_2.1hi <- waic_2.1hi$pointwise[,"elpd_waic"]
loo_2.1hi <- loo(log_lik_2.1hi)
pwelpdloo_2.1hi <- loo_2.1hi$pointwise[,"elpd_loo"]
print(loo_2.1hi)
mean(parsfit$beta_condPTA)
quantile(parsfit$beta_condPTA,probs=c(0.025,0.5,0.975),na.rm = TRUE)
mean(parsfit$beta_condPTA/parsfit$beta_PTA)
mean(parsfit$beta_PTA/parsfit$beta_condPTA)
mean(abs(parsfit$beta_PTA)/abs(parsfit$beta_condPTA))
1/mean(abs(parsfit$beta_condPTA)/parsfit$beta_PTA)
1/mean(abs(parsfit$beta_condPTA))/mean(parsfit$beta_PTA)
1/(mean(abs(parsfit$beta_condPTA))/mean(parsfit$beta_PTA))
Rsquared_m1.3hi
Rsquared_m1.1hi
## 5. Hier. GLM w only main effects -----------------
m1.1hi <- stan_model(file = 'm1.1hi_quater.stan')
fit.m1.1hi <- sampling(m1.1hi,
data = data,
chains = 4,             # number of Markov chains
warmup = 3000,          # number of warmup iterations per chain
iter = 7000,            # total number of iterations per chain
refresh = 1000)
# diagnosis
parameters = c("beta_0","gamma_0","beta_PTA","beta_age","beta_cond","beta_gender","plapse","sigma_0")#,"beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","plapse")#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA")
print(fit.m1.1hi, pars = parameters)
#launch_shinystan(fit.m1.1hi)
plot(fit.m1.1hi, show_density = TRUE, show_outer_line = FALSE, ci_level= 0.95,outer_level= 0.99, pars = parameters) + ggtitle("m1.1hi") #+ coord_flip() + theme(axis.text.x = element_text(angle = 90, hjust = 1))#+xlim(-3,1)
# counterfactual predictions
parsfit<-extract(fit.m1.1hi,pars=rev(fit.m1.1hi@model_pars))#c("beta_0","beta_PTA","beta_age","beta_cond","beta_condPTA","beta_agePTA","beta_agecond","beta_agecondPTA","gamma_0","gamma_PTA","gamma_age","gamma_cond","gamma_condPTA","gamma_agePTA","gamma_agecond","gamma_agecondPTA"))
Nsamples = length(parsfit$beta_0)
source("counterfactuals_simple.R")
p3.1c_fit <- p3.1c +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE,  'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, linetype='longdash', 'size'=1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup, fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
geom_ribbon(data=heardata_pred_center,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup,  fill=center), inherit.aes = FALSE, color=NA, alpha=0.1)+
ylim(0, 100)
p3.1c_fit
p3.1b +
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_silence_med, color=center), inherit.aes = FALSE, 'size'=1)+
geom_line(data=heardata_pred_center,aes(x=PTA, y=PC_noise_med, color=center), inherit.aes = FALSE, 'size'=1, linetype='longdash')
p3.1b_fit <- p3.1b +
geom_line(data=heardata_pred,aes(x=PTA, y=PC_silence_med), inherit.aes = FALSE, color='blue', 'size'=1)+
geom_line(data=heardata_pred,aes(x=PTA, y=PC_noise_med), inherit.aes = FALSE, color='blue', linetype='dotted', 'size'=1)+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_silence_Cinf, ymax=PC_silence_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')+
geom_ribbon(data=heardata_pred,aes(x=PTA, ymin=PC_noise_Cinf, ymax=PC_noise_Csup), inherit.aes = FALSE, color=NA, alpha=0.1, fill='blue')
p3.1b_fit
# Compute goodness of fit measures
Rsquared_m1.1hi <- Rsquared(data,parsfit)
log_lik_1.1hi <- extract_log_lik(fit.m1.1hi)
pwll_1.1hi <- apply(log_lik_1.1hi, 2, mean)
waic_1.1hi <- waic(log_lik_1.1hi)
pwwaic_1.1hi <- waic_1.1hi$pointwise[,"elpd_waic"]
loo_1.1hi <- loo(log_lik_1.1hi)
print(loo_1.1hi)
Rsquared_m1.1hi
-2*sum(pwll_2.1hi)
loo_compare(loo_1.1hi,loo_1.2hi,loo_1.3hi)
loo_compare(loo_1.1hi,loo_1.2hi,loo_1.3hi,loo_2.1hi)
Rsquared_m2.1hi
PTAslope_s = (1-1/16)*parsfit$beta_PTA
PTAslope_n = (1-1/16-parsfit$plapse[,1])*parsfit$beta_PTA
PTAslope_diff = PTAslope_s - PTAslope_n
PTAslope_s = (1-1/16)*parsfit$beta_PTA
PTAslope_n = (1-1/16-parsfit$plapse)*parsfit$beta_PTA
PTAslope_diff = PTAslope_s - PTAslope_n
mean(PTAslope_diff)
quantile(parsfit$PTAslope_diff,probs=c(0.025,0.5,0.975),na.rm = TRUE)
quantile(PTAslope_diff,probs=c(0.025,0.5,0.975),na.rm = TRUE)
mean(PTAslope_s)
Rsquared_m2.1hi
Rsquared_m1.1hi
Rsquared_m1.2hi
Rsquared_m1.3hi
Rsquared_m2.1hi
PTAslope_diff
mean(PTAslope_s)
mean(PTAslope_n)
quantile(PTAslope_diff,probs=c(0.025,0.5,0.975),na.rm = TRUE)
rstan:::rstudio_stanc("m1.3hi_quater.stan")
